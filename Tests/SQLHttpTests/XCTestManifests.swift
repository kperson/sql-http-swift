#if !canImport(ObjectiveC)
import XCTest

extension DataSourceReferenceTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DataSourceReferenceTests = [
        ("testCustom", testCustom),
        ("testDirect", testDirect),
    ]
}

extension MaskedTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaskedTests = [
        ("testMaskedEncoding", testMaskedEncoding),
        ("testRepresentation", testRepresentation),
    ]
}

extension SQLCommandTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SQLCommandTests = [
        ("testEncodingBatchWrite", testEncodingBatchWrite),
        ("testEncodingQuery", testEncodingQuery),
        ("testEncodingWrite", testEncodingWrite),
    ]
}

extension SQLHttpClientTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SQLHttpClientTests = [
        ("testBatchWrite", testBatchWrite),
        ("testWriteAndRead", testWriteAndRead),
    ]
}

extension SQLValueTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SQLValueTests = [
        ("testEncodingBlob", testEncodingBlob),
        ("testEncodingDate", testEncodingDate),
        ("testEncodingInt", testEncodingInt),
        ("testEncodingLong", testEncodingLong),
        ("testEncodingNull", testEncodingNull),
        ("testEncodingString", testEncodingString),
        ("testEncodingTime", testEncodingTime),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(DataSourceReferenceTests.__allTests__DataSourceReferenceTests),
        testCase(MaskedTests.__allTests__MaskedTests),
        testCase(SQLCommandTests.__allTests__SQLCommandTests),
        testCase(SQLHttpClientTests.__allTests__SQLHttpClientTests),
        testCase(SQLValueTests.__allTests__SQLValueTests),
    ]
}
#endif
